// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v5.28.0
// source: pb/msg.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//同步客户端玩家ID
type SyncPID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PID int32 `protobuf:"varint,1,opt,name=PID,proto3" json:"PID,omitempty"`
}

func (x *SyncPID) Reset() {
	*x = SyncPID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncPID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncPID) ProtoMessage() {}

func (x *SyncPID) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncPID.ProtoReflect.Descriptor instead.
func (*SyncPID) Descriptor() ([]byte, []int) {
	return file_pb_msg_proto_rawDescGZIP(), []int{0}
}

func (x *SyncPID) GetPID() int32 {
	if x != nil {
		return x.PID
	}
	return 0
}

type Tcp_Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
}

func (x *Tcp_Info) Reset() {
	*x = Tcp_Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tcp_Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tcp_Info) ProtoMessage() {}

func (x *Tcp_Info) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tcp_Info.ProtoReflect.Descriptor instead.
func (*Tcp_Info) Descriptor() ([]byte, []int) {
	return file_pb_msg_proto_rawDescGZIP(), []int{1}
}

func (x *Tcp_Info) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Tcp_Info) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type Tcp_Login struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName string `protobuf:"bytes,1,opt,name=UserName,proto3" json:"UserName,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
	Mode     int32  `protobuf:"varint,3,opt,name=Mode,proto3" json:"Mode,omitempty"`
}

func (x *Tcp_Login) Reset() {
	*x = Tcp_Login{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tcp_Login) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tcp_Login) ProtoMessage() {}

func (x *Tcp_Login) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tcp_Login.ProtoReflect.Descriptor instead.
func (*Tcp_Login) Descriptor() ([]byte, []int) {
	return file_pb_msg_proto_rawDescGZIP(), []int{2}
}

func (x *Tcp_Login) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *Tcp_Login) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Tcp_Login) GetMode() int32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

type Tcp_Lose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName string `protobuf:"bytes,1,opt,name=UserName,proto3" json:"UserName,omitempty"`
}

func (x *Tcp_Lose) Reset() {
	*x = Tcp_Lose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tcp_Lose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tcp_Lose) ProtoMessage() {}

func (x *Tcp_Lose) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tcp_Lose.ProtoReflect.Descriptor instead.
func (*Tcp_Lose) Descriptor() ([]byte, []int) {
	return file_pb_msg_proto_rawDescGZIP(), []int{3}
}

func (x *Tcp_Lose) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type Tcp_Bind struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserToken  string `protobuf:"bytes,1,opt,name=UserToken,proto3" json:"UserToken,omitempty"`
	DirVersion int64  `protobuf:"varint,2,opt,name=DirVersion,proto3" json:"DirVersion,omitempty"`
}

func (x *Tcp_Bind) Reset() {
	*x = Tcp_Bind{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tcp_Bind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tcp_Bind) ProtoMessage() {}

func (x *Tcp_Bind) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tcp_Bind.ProtoReflect.Descriptor instead.
func (*Tcp_Bind) Descriptor() ([]byte, []int) {
	return file_pb_msg_proto_rawDescGZIP(), []int{4}
}

func (x *Tcp_Bind) GetUserToken() string {
	if x != nil {
		return x.UserToken
	}
	return ""
}

func (x *Tcp_Bind) GetDirVersion() int64 {
	if x != nil {
		return x.DirVersion
	}
	return 0
}

type Tcp_Version struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DirVersion int64 `protobuf:"varint,1,opt,name=DirVersion,proto3" json:"DirVersion,omitempty"`
}

func (x *Tcp_Version) Reset() {
	*x = Tcp_Version{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tcp_Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tcp_Version) ProtoMessage() {}

func (x *Tcp_Version) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tcp_Version.ProtoReflect.Descriptor instead.
func (*Tcp_Version) Descriptor() ([]byte, []int) {
	return file_pb_msg_proto_rawDescGZIP(), []int{5}
}

func (x *Tcp_Version) GetDirVersion() int64 {
	if x != nil {
		return x.DirVersion
	}
	return 0
}

type Tcp_StudentStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Battery int32 `protobuf:"varint,1,opt,name=Battery,proto3" json:"Battery,omitempty"`
	Free    int32 `protobuf:"varint,2,opt,name=Free,proto3" json:"Free,omitempty"`
}

func (x *Tcp_StudentStatus) Reset() {
	*x = Tcp_StudentStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tcp_StudentStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tcp_StudentStatus) ProtoMessage() {}

func (x *Tcp_StudentStatus) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tcp_StudentStatus.ProtoReflect.Descriptor instead.
func (*Tcp_StudentStatus) Descriptor() ([]byte, []int) {
	return file_pb_msg_proto_rawDescGZIP(), []int{6}
}

func (x *Tcp_StudentStatus) GetBattery() int32 {
	if x != nil {
		return x.Battery
	}
	return 0
}

func (x *Tcp_StudentStatus) GetFree() int32 {
	if x != nil {
		return x.Free
	}
	return 0
}

type Response_StudentStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number string `protobuf:"bytes,1,opt,name=Number,proto3" json:"Number,omitempty"`
	Free   int32  `protobuf:"varint,2,opt,name=Free,proto3" json:"Free,omitempty"`
}

func (x *Response_StudentStatus) Reset() {
	*x = Response_StudentStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_StudentStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_StudentStatus) ProtoMessage() {}

func (x *Response_StudentStatus) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_StudentStatus.ProtoReflect.Descriptor instead.
func (*Response_StudentStatus) Descriptor() ([]byte, []int) {
	return file_pb_msg_proto_rawDescGZIP(), []int{7}
}

func (x *Response_StudentStatus) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *Response_StudentStatus) GetFree() int32 {
	if x != nil {
		return x.Free
	}
	return 0
}

type Tcp_UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NickName    string `protobuf:"bytes,1,opt,name=NickName,proto3" json:"NickName,omitempty"`
	UserName    string `protobuf:"bytes,2,opt,name=UserName,proto3" json:"UserName,omitempty"`
	AccountType uint32 `protobuf:"varint,3,opt,name=AccountType,proto3" json:"AccountType,omitempty"`
}

func (x *Tcp_UserInfo) Reset() {
	*x = Tcp_UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tcp_UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tcp_UserInfo) ProtoMessage() {}

func (x *Tcp_UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tcp_UserInfo.ProtoReflect.Descriptor instead.
func (*Tcp_UserInfo) Descriptor() ([]byte, []int) {
	return file_pb_msg_proto_rawDescGZIP(), []int{8}
}

func (x *Tcp_UserInfo) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *Tcp_UserInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *Tcp_UserInfo) GetAccountType() uint32 {
	if x != nil {
		return x.AccountType
	}
	return 0
}

type Tcp_Gz struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   int32  `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"` //1-取消故障 0-设置故障
	UserName string `protobuf:"bytes,2,opt,name=UserName,proto3" json:"UserName,omitempty"`
}

func (x *Tcp_Gz) Reset() {
	*x = Tcp_Gz{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tcp_Gz) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tcp_Gz) ProtoMessage() {}

func (x *Tcp_Gz) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tcp_Gz.ProtoReflect.Descriptor instead.
func (*Tcp_Gz) Descriptor() ([]byte, []int) {
	return file_pb_msg_proto_rawDescGZIP(), []int{9}
}

func (x *Tcp_Gz) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Tcp_Gz) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type Tcp_Gz_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GzStatus *Tcp_Gz   `protobuf:"bytes,1,opt,name=GzStatus,proto3" json:"GzStatus,omitempty"`
	Info     *Tcp_Info `protobuf:"bytes,2,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *Tcp_Gz_Response) Reset() {
	*x = Tcp_Gz_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tcp_Gz_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tcp_Gz_Response) ProtoMessage() {}

func (x *Tcp_Gz_Response) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tcp_Gz_Response.ProtoReflect.Descriptor instead.
func (*Tcp_Gz_Response) Descriptor() ([]byte, []int) {
	return file_pb_msg_proto_rawDescGZIP(), []int{10}
}

func (x *Tcp_Gz_Response) GetGzStatus() *Tcp_Gz {
	if x != nil {
		return x.GzStatus
	}
	return nil
}

func (x *Tcp_Gz_Response) GetInfo() *Tcp_Info {
	if x != nil {
		return x.Info
	}
	return nil
}

type Tcp_CourseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid   string `protobuf:"bytes,1,opt,name=Cid,proto3" json:"Cid,omitempty"`
	CType int32  `protobuf:"varint,2,opt,name=CType,proto3" json:"CType,omitempty"` //4-交互课件 1-3 -视频课件
	CMode int32  `protobuf:"varint,3,opt,name=CMode,proto3" json:"CMode,omitempty"` //1-学练模式 2-考评模式 3-协同模式
}

func (x *Tcp_CourseInfo) Reset() {
	*x = Tcp_CourseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tcp_CourseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tcp_CourseInfo) ProtoMessage() {}

func (x *Tcp_CourseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tcp_CourseInfo.ProtoReflect.Descriptor instead.
func (*Tcp_CourseInfo) Descriptor() ([]byte, []int) {
	return file_pb_msg_proto_rawDescGZIP(), []int{11}
}

func (x *Tcp_CourseInfo) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *Tcp_CourseInfo) GetCType() int32 {
	if x != nil {
		return x.CType
	}
	return 0
}

func (x *Tcp_CourseInfo) GetCMode() int32 {
	if x != nil {
		return x.CMode
	}
	return 0
}

type Tcp_CoursePlay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid        string `protobuf:"bytes,1,opt,name=Cid,proto3" json:"Cid,omitempty"`
	CType      int32  `protobuf:"varint,2,opt,name=CType,proto3" json:"CType,omitempty"`           //4-交互课件 1-3 -视频课件
	CMode      int32  `protobuf:"varint,3,opt,name=CMode,proto3" json:"CMode,omitempty"`           //1-学练模式 2-考评模式 3-协同模式
	Contorller string `protobuf:"bytes,4,opt,name=Contorller,proto3" json:"Contorller,omitempty"`  //主控 空表示都是主控
	PartNumber int32  `protobuf:"varint,5,opt,name=PartNumber,proto3" json:"PartNumber,omitempty"` //本次参与人数
}

func (x *Tcp_CoursePlay) Reset() {
	*x = Tcp_CoursePlay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tcp_CoursePlay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tcp_CoursePlay) ProtoMessage() {}

func (x *Tcp_CoursePlay) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tcp_CoursePlay.ProtoReflect.Descriptor instead.
func (*Tcp_CoursePlay) Descriptor() ([]byte, []int) {
	return file_pb_msg_proto_rawDescGZIP(), []int{12}
}

func (x *Tcp_CoursePlay) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *Tcp_CoursePlay) GetCType() int32 {
	if x != nil {
		return x.CType
	}
	return 0
}

func (x *Tcp_CoursePlay) GetCMode() int32 {
	if x != nil {
		return x.CMode
	}
	return 0
}

func (x *Tcp_CoursePlay) GetContorller() string {
	if x != nil {
		return x.Contorller
	}
	return ""
}

func (x *Tcp_CoursePlay) GetPartNumber() int32 {
	if x != nil {
		return x.PartNumber
	}
	return 0
}

type Tcp_Members struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ms []string `protobuf:"bytes,1,rep,name=Ms,proto3" json:"Ms,omitempty"`
}

func (x *Tcp_Members) Reset() {
	*x = Tcp_Members{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tcp_Members) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tcp_Members) ProtoMessage() {}

func (x *Tcp_Members) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tcp_Members.ProtoReflect.Descriptor instead.
func (*Tcp_Members) Descriptor() ([]byte, []int) {
	return file_pb_msg_proto_rawDescGZIP(), []int{13}
}

func (x *Tcp_Members) GetMs() []string {
	if x != nil {
		return x.Ms
	}
	return nil
}

type Tcp_VideoStep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaTime float64 `protobuf:"fixed64,1,opt,name=MediaTime,proto3" json:"MediaTime,omitempty"`
}

func (x *Tcp_VideoStep) Reset() {
	*x = Tcp_VideoStep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tcp_VideoStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tcp_VideoStep) ProtoMessage() {}

func (x *Tcp_VideoStep) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tcp_VideoStep.ProtoReflect.Descriptor instead.
func (*Tcp_VideoStep) Descriptor() ([]byte, []int) {
	return file_pb_msg_proto_rawDescGZIP(), []int{14}
}

func (x *Tcp_VideoStep) GetMediaTime() float64 {
	if x != nil {
		return x.MediaTime
	}
	return 0
}

type TCP_RegisterObj struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjId           int32   `protobuf:"varint,1,opt,name=ObjId,proto3" json:"ObjId,omitempty"`
	X               float32 `protobuf:"fixed32,2,opt,name=X,proto3" json:"X,omitempty"`
	Y               float32 `protobuf:"fixed32,3,opt,name=Y,proto3" json:"Y,omitempty"`
	Z               float32 `protobuf:"fixed32,4,opt,name=Z,proto3" json:"Z,omitempty"`
	RX              float32 `protobuf:"fixed32,5,opt,name=RX,proto3" json:"RX,omitempty"`
	RY              float32 `protobuf:"fixed32,6,opt,name=RY,proto3" json:"RY,omitempty"`
	RZ              float32 `protobuf:"fixed32,7,opt,name=RZ,proto3" json:"RZ,omitempty"`
	InteractiveType int32   `protobuf:"varint,8,opt,name=InteractiveType,proto3" json:"InteractiveType,omitempty"`
	Tb              int32   `protobuf:"varint,9,opt,name=Tb,proto3" json:"Tb,omitempty"`
	Visiable        int32   `protobuf:"varint,10,opt,name=Visiable,proto3" json:"Visiable,omitempty"`
}

func (x *TCP_RegisterObj) Reset() {
	*x = TCP_RegisterObj{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TCP_RegisterObj) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCP_RegisterObj) ProtoMessage() {}

func (x *TCP_RegisterObj) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCP_RegisterObj.ProtoReflect.Descriptor instead.
func (*TCP_RegisterObj) Descriptor() ([]byte, []int) {
	return file_pb_msg_proto_rawDescGZIP(), []int{15}
}

func (x *TCP_RegisterObj) GetObjId() int32 {
	if x != nil {
		return x.ObjId
	}
	return 0
}

func (x *TCP_RegisterObj) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *TCP_RegisterObj) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *TCP_RegisterObj) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *TCP_RegisterObj) GetRX() float32 {
	if x != nil {
		return x.RX
	}
	return 0
}

func (x *TCP_RegisterObj) GetRY() float32 {
	if x != nil {
		return x.RY
	}
	return 0
}

func (x *TCP_RegisterObj) GetRZ() float32 {
	if x != nil {
		return x.RZ
	}
	return 0
}

func (x *TCP_RegisterObj) GetInteractiveType() int32 {
	if x != nil {
		return x.InteractiveType
	}
	return 0
}

func (x *TCP_RegisterObj) GetTb() int32 {
	if x != nil {
		return x.Tb
	}
	return 0
}

func (x *TCP_RegisterObj) GetVisiable() int32 {
	if x != nil {
		return x.Visiable
	}
	return 0
}

type TCP_Grab_Call struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid   int32  `protobuf:"varint,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
	ObjId int32  `protobuf:"varint,2,opt,name=ObjId,proto3" json:"ObjId,omitempty"`
	UName string `protobuf:"bytes,3,opt,name=UName,proto3" json:"UName,omitempty"`
}

func (x *TCP_Grab_Call) Reset() {
	*x = TCP_Grab_Call{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TCP_Grab_Call) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCP_Grab_Call) ProtoMessage() {}

func (x *TCP_Grab_Call) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCP_Grab_Call.ProtoReflect.Descriptor instead.
func (*TCP_Grab_Call) Descriptor() ([]byte, []int) {
	return file_pb_msg_proto_rawDescGZIP(), []int{16}
}

func (x *TCP_Grab_Call) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *TCP_Grab_Call) GetObjId() int32 {
	if x != nil {
		return x.ObjId
	}
	return 0
}

func (x *TCP_Grab_Call) GetUName() string {
	if x != nil {
		return x.UName
	}
	return ""
}

type Tcp_Object struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjId int32 `protobuf:"varint,1,opt,name=ObjId,proto3" json:"ObjId,omitempty"`
}

func (x *Tcp_Object) Reset() {
	*x = Tcp_Object{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tcp_Object) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tcp_Object) ProtoMessage() {}

func (x *Tcp_Object) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tcp_Object.ProtoReflect.Descriptor instead.
func (*Tcp_Object) Descriptor() ([]byte, []int) {
	return file_pb_msg_proto_rawDescGZIP(), []int{17}
}

func (x *Tcp_Object) GetObjId() int32 {
	if x != nil {
		return x.ObjId
	}
	return 0
}

type TCP_DetachObj struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjId int32   `protobuf:"varint,1,opt,name=ObjId,proto3" json:"ObjId,omitempty"`
	X     float32 `protobuf:"fixed32,2,opt,name=X,proto3" json:"X,omitempty"`
	Y     float32 `protobuf:"fixed32,3,opt,name=Y,proto3" json:"Y,omitempty"`
	Z     float32 `protobuf:"fixed32,4,opt,name=Z,proto3" json:"Z,omitempty"`
	RX    float32 `protobuf:"fixed32,5,opt,name=RX,proto3" json:"RX,omitempty"`
	RY    float32 `protobuf:"fixed32,6,opt,name=RY,proto3" json:"RY,omitempty"`
	RZ    float32 `protobuf:"fixed32,7,opt,name=RZ,proto3" json:"RZ,omitempty"`
	RIX   float32 `protobuf:"fixed32,8,opt,name=RIX,proto3" json:"RIX,omitempty"`
	RIY   float32 `protobuf:"fixed32,9,opt,name=RIY,proto3" json:"RIY,omitempty"`
	RIZ   float32 `protobuf:"fixed32,10,opt,name=RIZ,proto3" json:"RIZ,omitempty"`
	AX    float32 `protobuf:"fixed32,11,opt,name=AX,proto3" json:"AX,omitempty"`
	AY    float32 `protobuf:"fixed32,12,opt,name=AY,proto3" json:"AY,omitempty"`
	AZ    float32 `protobuf:"fixed32,13,opt,name=AZ,proto3" json:"AZ,omitempty"`
}

func (x *TCP_DetachObj) Reset() {
	*x = TCP_DetachObj{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TCP_DetachObj) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCP_DetachObj) ProtoMessage() {}

func (x *TCP_DetachObj) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCP_DetachObj.ProtoReflect.Descriptor instead.
func (*TCP_DetachObj) Descriptor() ([]byte, []int) {
	return file_pb_msg_proto_rawDescGZIP(), []int{18}
}

func (x *TCP_DetachObj) GetObjId() int32 {
	if x != nil {
		return x.ObjId
	}
	return 0
}

func (x *TCP_DetachObj) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *TCP_DetachObj) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *TCP_DetachObj) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *TCP_DetachObj) GetRX() float32 {
	if x != nil {
		return x.RX
	}
	return 0
}

func (x *TCP_DetachObj) GetRY() float32 {
	if x != nil {
		return x.RY
	}
	return 0
}

func (x *TCP_DetachObj) GetRZ() float32 {
	if x != nil {
		return x.RZ
	}
	return 0
}

func (x *TCP_DetachObj) GetRIX() float32 {
	if x != nil {
		return x.RIX
	}
	return 0
}

func (x *TCP_DetachObj) GetRIY() float32 {
	if x != nil {
		return x.RIY
	}
	return 0
}

func (x *TCP_DetachObj) GetRIZ() float32 {
	if x != nil {
		return x.RIZ
	}
	return 0
}

func (x *TCP_DetachObj) GetAX() float32 {
	if x != nil {
		return x.AX
	}
	return 0
}

func (x *TCP_DetachObj) GetAY() float32 {
	if x != nil {
		return x.AY
	}
	return 0
}

func (x *TCP_DetachObj) GetAZ() float32 {
	if x != nil {
		return x.AZ
	}
	return 0
}

type TCP_TbObj struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjId int32   `protobuf:"varint,1,opt,name=ObjId,proto3" json:"ObjId,omitempty"`
	X     float32 `protobuf:"fixed32,2,opt,name=X,proto3" json:"X,omitempty"`
	Y     float32 `protobuf:"fixed32,3,opt,name=Y,proto3" json:"Y,omitempty"`
	Z     float32 `protobuf:"fixed32,4,opt,name=Z,proto3" json:"Z,omitempty"`
	RX    float32 `protobuf:"fixed32,5,opt,name=RX,proto3" json:"RX,omitempty"`
	RY    float32 `protobuf:"fixed32,6,opt,name=RY,proto3" json:"RY,omitempty"`
	RZ    float32 `protobuf:"fixed32,7,opt,name=RZ,proto3" json:"RZ,omitempty"`
}

func (x *TCP_TbObj) Reset() {
	*x = TCP_TbObj{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TCP_TbObj) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCP_TbObj) ProtoMessage() {}

func (x *TCP_TbObj) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCP_TbObj.ProtoReflect.Descriptor instead.
func (*TCP_TbObj) Descriptor() ([]byte, []int) {
	return file_pb_msg_proto_rawDescGZIP(), []int{19}
}

func (x *TCP_TbObj) GetObjId() int32 {
	if x != nil {
		return x.ObjId
	}
	return 0
}

func (x *TCP_TbObj) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *TCP_TbObj) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *TCP_TbObj) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *TCP_TbObj) GetRX() float32 {
	if x != nil {
		return x.RX
	}
	return 0
}

func (x *TCP_TbObj) GetRY() float32 {
	if x != nil {
		return x.RY
	}
	return 0
}

func (x *TCP_TbObj) GetRZ() float32 {
	if x != nil {
		return x.RZ
	}
	return 0
}

type Tcp_ObjectStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjId  int32 `protobuf:"varint,1,opt,name=ObjId,proto3" json:"ObjId,omitempty"`
	Status int32 `protobuf:"varint,2,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *Tcp_ObjectStatus) Reset() {
	*x = Tcp_ObjectStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tcp_ObjectStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tcp_ObjectStatus) ProtoMessage() {}

func (x *Tcp_ObjectStatus) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tcp_ObjectStatus.ProtoReflect.Descriptor instead.
func (*Tcp_ObjectStatus) Descriptor() ([]byte, []int) {
	return file_pb_msg_proto_rawDescGZIP(), []int{20}
}

func (x *Tcp_ObjectStatus) GetObjId() int32 {
	if x != nil {
		return x.ObjId
	}
	return 0
}

func (x *Tcp_ObjectStatus) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type Tcp_Step struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StepId    int32  `protobuf:"varint,1,opt,name=StepId,proto3" json:"StepId,omitempty"`
	StepDate  string `protobuf:"bytes,2,opt,name=StepDate,proto3" json:"StepDate,omitempty"`
	StepState int32  `protobuf:"varint,3,opt,name=StepState,proto3" json:"StepState,omitempty"`
	UName     string `protobuf:"bytes,4,opt,name=UName,proto3" json:"UName,omitempty"`
}

func (x *Tcp_Step) Reset() {
	*x = Tcp_Step{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tcp_Step) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tcp_Step) ProtoMessage() {}

func (x *Tcp_Step) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tcp_Step.ProtoReflect.Descriptor instead.
func (*Tcp_Step) Descriptor() ([]byte, []int) {
	return file_pb_msg_proto_rawDescGZIP(), []int{21}
}

func (x *Tcp_Step) GetStepId() int32 {
	if x != nil {
		return x.StepId
	}
	return 0
}

func (x *Tcp_Step) GetStepDate() string {
	if x != nil {
		return x.StepDate
	}
	return ""
}

func (x *Tcp_Step) GetStepState() int32 {
	if x != nil {
		return x.StepState
	}
	return 0
}

func (x *Tcp_Step) GetUName() string {
	if x != nil {
		return x.UName
	}
	return ""
}

type Tcp_Leave struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State int32 `protobuf:"varint,1,opt,name=State,proto3" json:"State,omitempty"`
}

func (x *Tcp_Leave) Reset() {
	*x = Tcp_Leave{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tcp_Leave) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tcp_Leave) ProtoMessage() {}

func (x *Tcp_Leave) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tcp_Leave.ProtoReflect.Descriptor instead.
func (*Tcp_Leave) Descriptor() ([]byte, []int) {
	return file_pb_msg_proto_rawDescGZIP(), []int{22}
}

func (x *Tcp_Leave) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

type Tcp_Shixun struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//repeated string Users = 1;
	Mode   int32  `protobuf:"varint,2,opt,name=Mode,proto3" json:"Mode,omitempty"`
	WorkId string `protobuf:"bytes,3,opt,name=WorkId,proto3" json:"WorkId,omitempty"`
}

func (x *Tcp_Shixun) Reset() {
	*x = Tcp_Shixun{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tcp_Shixun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tcp_Shixun) ProtoMessage() {}

func (x *Tcp_Shixun) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tcp_Shixun.ProtoReflect.Descriptor instead.
func (*Tcp_Shixun) Descriptor() ([]byte, []int) {
	return file_pb_msg_proto_rawDescGZIP(), []int{23}
}

func (x *Tcp_Shixun) GetMode() int32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *Tcp_Shixun) GetWorkId() string {
	if x != nil {
		return x.WorkId
	}
	return ""
}

type Tcp_UInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName string `protobuf:"bytes,1,opt,name=UserName,proto3" json:"UserName,omitempty"`
}

func (x *Tcp_UInfo) Reset() {
	*x = Tcp_UInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tcp_UInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tcp_UInfo) ProtoMessage() {}

func (x *Tcp_UInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tcp_UInfo.ProtoReflect.Descriptor instead.
func (*Tcp_UInfo) Descriptor() ([]byte, []int) {
	return file_pb_msg_proto_rawDescGZIP(), []int{24}
}

func (x *Tcp_UInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type Tcp_Progress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName string  `protobuf:"bytes,1,opt,name=UserName,proto3" json:"UserName,omitempty"`
	Progress float32 `protobuf:"fixed32,2,opt,name=progress,proto3" json:"progress,omitempty"`
}

func (x *Tcp_Progress) Reset() {
	*x = Tcp_Progress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tcp_Progress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tcp_Progress) ProtoMessage() {}

func (x *Tcp_Progress) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tcp_Progress.ProtoReflect.Descriptor instead.
func (*Tcp_Progress) Descriptor() ([]byte, []int) {
	return file_pb_msg_proto_rawDescGZIP(), []int{25}
}

func (x *Tcp_Progress) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *Tcp_Progress) GetProgress() float32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

type Tcp_QuestionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Qid       int32  `protobuf:"varint,1,opt,name=Qid,proto3" json:"Qid,omitempty"`
	Code      int32  `protobuf:"varint,2,opt,name=Code,proto3" json:"Code,omitempty"`
	StepDate  string `protobuf:"bytes,3,opt,name=StepDate,proto3" json:"StepDate,omitempty"`
	StepState int32  `protobuf:"varint,4,opt,name=StepState,proto3" json:"StepState,omitempty"`
	UName     string `protobuf:"bytes,5,opt,name=UName,proto3" json:"UName,omitempty"`
}

func (x *Tcp_QuestionInfo) Reset() {
	*x = Tcp_QuestionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tcp_QuestionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tcp_QuestionInfo) ProtoMessage() {}

func (x *Tcp_QuestionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tcp_QuestionInfo.ProtoReflect.Descriptor instead.
func (*Tcp_QuestionInfo) Descriptor() ([]byte, []int) {
	return file_pb_msg_proto_rawDescGZIP(), []int{26}
}

func (x *Tcp_QuestionInfo) GetQid() int32 {
	if x != nil {
		return x.Qid
	}
	return 0
}

func (x *Tcp_QuestionInfo) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Tcp_QuestionInfo) GetStepDate() string {
	if x != nil {
		return x.StepDate
	}
	return ""
}

func (x *Tcp_QuestionInfo) GetStepState() int32 {
	if x != nil {
		return x.StepState
	}
	return 0
}

func (x *Tcp_QuestionInfo) GetUName() string {
	if x != nil {
		return x.UName
	}
	return ""
}

type Tcp_WorkRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workid     string  `protobuf:"bytes,1,opt,name=Workid,proto3" json:"Workid,omitempty"`
	Workname   string  `protobuf:"bytes,2,opt,name=Workname,proto3" json:"Workname,omitempty"`
	Date       string  `protobuf:"bytes,3,opt,name=Date,proto3" json:"Date,omitempty"`
	Mode       int32   `protobuf:"varint,4,opt,name=Mode,proto3" json:"Mode,omitempty"`
	Partnumber int32   `protobuf:"varint,5,opt,name=Partnumber,proto3" json:"Partnumber,omitempty"`
	MaxScore   float32 `protobuf:"fixed32,6,opt,name=MaxScore,proto3" json:"MaxScore,omitempty"`
}

func (x *Tcp_WorkRecord) Reset() {
	*x = Tcp_WorkRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tcp_WorkRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tcp_WorkRecord) ProtoMessage() {}

func (x *Tcp_WorkRecord) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tcp_WorkRecord.ProtoReflect.Descriptor instead.
func (*Tcp_WorkRecord) Descriptor() ([]byte, []int) {
	return file_pb_msg_proto_rawDescGZIP(), []int{27}
}

func (x *Tcp_WorkRecord) GetWorkid() string {
	if x != nil {
		return x.Workid
	}
	return ""
}

func (x *Tcp_WorkRecord) GetWorkname() string {
	if x != nil {
		return x.Workname
	}
	return ""
}

func (x *Tcp_WorkRecord) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *Tcp_WorkRecord) GetMode() int32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *Tcp_WorkRecord) GetPartnumber() int32 {
	if x != nil {
		return x.Partnumber
	}
	return 0
}

func (x *Tcp_WorkRecord) GetMaxScore() float32 {
	if x != nil {
		return x.MaxScore
	}
	return 0
}

type Tcp_ResponseRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32 `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	UniqueId int32 `protobuf:"varint,2,opt,name=UniqueId,proto3" json:"UniqueId,omitempty"`
}

func (x *Tcp_ResponseRecord) Reset() {
	*x = Tcp_ResponseRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tcp_ResponseRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tcp_ResponseRecord) ProtoMessage() {}

func (x *Tcp_ResponseRecord) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tcp_ResponseRecord.ProtoReflect.Descriptor instead.
func (*Tcp_ResponseRecord) Descriptor() ([]byte, []int) {
	return file_pb_msg_proto_rawDescGZIP(), []int{28}
}

func (x *Tcp_ResponseRecord) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Tcp_ResponseRecord) GetUniqueId() int32 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

type Tcp_RequestScene struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SceneId string `protobuf:"bytes,1,opt,name=SceneId,proto3" json:"SceneId,omitempty"`
	Mode    int32  `protobuf:"varint,2,opt,name=Mode,proto3" json:"Mode,omitempty"`
}

func (x *Tcp_RequestScene) Reset() {
	*x = Tcp_RequestScene{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tcp_RequestScene) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tcp_RequestScene) ProtoMessage() {}

func (x *Tcp_RequestScene) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tcp_RequestScene.ProtoReflect.Descriptor instead.
func (*Tcp_RequestScene) Descriptor() ([]byte, []int) {
	return file_pb_msg_proto_rawDescGZIP(), []int{29}
}

func (x *Tcp_RequestScene) GetSceneId() string {
	if x != nil {
		return x.SceneId
	}
	return ""
}

func (x *Tcp_RequestScene) GetMode() int32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

type Tcp_RequestJk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldUserName string  `protobuf:"bytes,1,opt,name=OldUserName,proto3" json:"OldUserName,omitempty"`
	UserName    string  `protobuf:"bytes,2,opt,name=UserName,proto3" json:"UserName,omitempty"`
	Progress    float32 `protobuf:"fixed32,3,opt,name=Progress,proto3" json:"Progress,omitempty"`
}

func (x *Tcp_RequestJk) Reset() {
	*x = Tcp_RequestJk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tcp_RequestJk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tcp_RequestJk) ProtoMessage() {}

func (x *Tcp_RequestJk) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tcp_RequestJk.ProtoReflect.Descriptor instead.
func (*Tcp_RequestJk) Descriptor() ([]byte, []int) {
	return file_pb_msg_proto_rawDescGZIP(), []int{30}
}

func (x *Tcp_RequestJk) GetOldUserName() string {
	if x != nil {
		return x.OldUserName
	}
	return ""
}

func (x *Tcp_RequestJk) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *Tcp_RequestJk) GetProgress() float32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

type Tcp_ResponseJk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32   `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Progress float32 `protobuf:"fixed32,2,opt,name=Progress,proto3" json:"Progress,omitempty"`
}

func (x *Tcp_ResponseJk) Reset() {
	*x = Tcp_ResponseJk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tcp_ResponseJk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tcp_ResponseJk) ProtoMessage() {}

func (x *Tcp_ResponseJk) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tcp_ResponseJk.ProtoReflect.Descriptor instead.
func (*Tcp_ResponseJk) Descriptor() ([]byte, []int) {
	return file_pb_msg_proto_rawDescGZIP(), []int{31}
}

func (x *Tcp_ResponseJk) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Tcp_ResponseJk) GetProgress() float32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

type Tcp_ResponseScene struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         int32  `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Mode         int32  `protobuf:"varint,2,opt,name=Mode,proto3" json:"Mode,omitempty"`
	UNumber      int32  `protobuf:"varint,3,opt,name=UNumber,proto3" json:"UNumber,omitempty"`          //本次参与教学人数
	WorkId       string `protobuf:"bytes,4,opt,name=WorkId,proto3" json:"WorkId,omitempty"`             //作品ID
	MainCtroller string `protobuf:"bytes,5,opt,name=MainCtroller,proto3" json:"MainCtroller,omitempty"` //主控用户
}

func (x *Tcp_ResponseScene) Reset() {
	*x = Tcp_ResponseScene{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tcp_ResponseScene) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tcp_ResponseScene) ProtoMessage() {}

func (x *Tcp_ResponseScene) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tcp_ResponseScene.ProtoReflect.Descriptor instead.
func (*Tcp_ResponseScene) Descriptor() ([]byte, []int) {
	return file_pb_msg_proto_rawDescGZIP(), []int{32}
}

func (x *Tcp_ResponseScene) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Tcp_ResponseScene) GetMode() int32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *Tcp_ResponseScene) GetUNumber() int32 {
	if x != nil {
		return x.UNumber
	}
	return 0
}

func (x *Tcp_ResponseScene) GetWorkId() string {
	if x != nil {
		return x.WorkId
	}
	return ""
}

func (x *Tcp_ResponseScene) GetMainCtroller() string {
	if x != nil {
		return x.MainCtroller
	}
	return ""
}

type Tcp_To struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubCode int32  `protobuf:"varint,1,opt,name=SubCode,proto3" json:"SubCode,omitempty"`
	Data    string `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *Tcp_To) Reset() {
	*x = Tcp_To{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tcp_To) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tcp_To) ProtoMessage() {}

func (x *Tcp_To) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tcp_To.ProtoReflect.Descriptor instead.
func (*Tcp_To) Descriptor() ([]byte, []int) {
	return file_pb_msg_proto_rawDescGZIP(), []int{33}
}

func (x *Tcp_To) GetSubCode() int32 {
	if x != nil {
		return x.SubCode
	}
	return 0
}

func (x *Tcp_To) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

var File_pb_msg_proto protoreflect.FileDescriptor

var file_pb_msg_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x62, 0x2f, 0x6d, 0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02,
	0x70, 0x62, 0x22, 0x1b, 0x0a, 0x07, 0x53, 0x79, 0x6e, 0x63, 0x50, 0x49, 0x44, 0x12, 0x10, 0x0a,
	0x03, 0x50, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x50, 0x49, 0x44, 0x22,
	0x30, 0x0a, 0x08, 0x54, 0x63, 0x70, 0x5f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73,
	0x67, 0x22, 0x57, 0x0a, 0x09, 0x54, 0x63, 0x70, 0x5f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x26, 0x0a, 0x08, 0x54, 0x63,
	0x70, 0x5f, 0x4c, 0x6f, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x48, 0x0a, 0x08, 0x54, 0x63, 0x70, 0x5f, 0x42, 0x69, 0x6e, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1e, 0x0a, 0x0a,
	0x44, 0x69, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x44, 0x69, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x2d, 0x0a, 0x0b,
	0x54, 0x63, 0x70, 0x5f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x44,
	0x69, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x44, 0x69, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x41, 0x0a, 0x11, 0x54,
	0x63, 0x70, 0x5f, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x72,
	0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x46, 0x72, 0x65, 0x65, 0x22, 0x44,
	0x0a, 0x16, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x46, 0x72, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x46, 0x72, 0x65, 0x65, 0x22, 0x68, 0x0a, 0x0c, 0x54, 0x63, 0x70, 0x5f, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x3c,
	0x0a, 0x06, 0x54, 0x63, 0x70, 0x5f, 0x47, 0x7a, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x5b, 0x0a, 0x0f,
	0x54, 0x63, 0x70, 0x5f, 0x47, 0x7a, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x26, 0x0a, 0x08, 0x47, 0x7a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x63, 0x70, 0x5f, 0x47, 0x7a, 0x52, 0x08, 0x47,
	0x7a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x63, 0x70, 0x5f, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4e, 0x0a, 0x0e, 0x54, 0x63, 0x70,
	0x5f, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x43,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x43, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x43, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x43, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x43, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x0e, 0x54, 0x63,
	0x70, 0x5f, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x43, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x43, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x43, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x43,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x43, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f,
	0x6e, 0x74, 0x6f, 0x72, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x43, 0x6f, 0x6e, 0x74, 0x6f, 0x72, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61,
	0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x50, 0x61, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x1d, 0x0a, 0x0b, 0x54, 0x63,
	0x70, 0x5f, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x4d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x4d, 0x73, 0x22, 0x2d, 0x0a, 0x0d, 0x54, 0x63, 0x70,
	0x5f, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x74, 0x65, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xd7, 0x01, 0x0a, 0x0f, 0x54, 0x43, 0x50,
	0x5f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x62, 0x6a, 0x12, 0x14, 0x0a, 0x05,
	0x4f, 0x62, 0x6a, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4f, 0x62, 0x6a,
	0x49, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x58, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x58,
	0x12, 0x0c, 0x0a, 0x01, 0x59, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x59, 0x12, 0x0c,
	0x0a, 0x01, 0x5a, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x5a, 0x12, 0x0e, 0x0a, 0x02,
	0x52, 0x58, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x02, 0x52, 0x58, 0x12, 0x0e, 0x0a, 0x02,
	0x52, 0x59, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x02, 0x52, 0x59, 0x12, 0x0e, 0x0a, 0x02,
	0x52, 0x5a, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x02, 0x52, 0x5a, 0x12, 0x28, 0x0a, 0x0f,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x54, 0x62, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x54, 0x62, 0x12, 0x1a, 0x0a, 0x08, 0x56, 0x69, 0x73, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x56, 0x69, 0x73, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x22, 0x4d, 0x0a, 0x0d, 0x54, 0x43, 0x50, 0x5f, 0x47, 0x72, 0x61, 0x62, 0x5f, 0x43,
	0x61, 0x6c, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x55, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x4f, 0x62, 0x6a, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4f, 0x62, 0x6a, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x55,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x55, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x22, 0x0a, 0x0a, 0x54, 0x63, 0x70, 0x5f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x4f, 0x62, 0x6a, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x4f, 0x62, 0x6a, 0x49, 0x64, 0x22, 0xe5, 0x01, 0x0a, 0x0d, 0x54, 0x43, 0x50, 0x5f, 0x44, 0x65,
	0x74, 0x61, 0x63, 0x68, 0x4f, 0x62, 0x6a, 0x12, 0x14, 0x0a, 0x05, 0x4f, 0x62, 0x6a, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4f, 0x62, 0x6a, 0x49, 0x64, 0x12, 0x0c, 0x0a,
	0x01, 0x58, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x58, 0x12, 0x0c, 0x0a, 0x01, 0x59,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x59, 0x12, 0x0c, 0x0a, 0x01, 0x5a, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x5a, 0x12, 0x0e, 0x0a, 0x02, 0x52, 0x58, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x02, 0x52, 0x58, 0x12, 0x0e, 0x0a, 0x02, 0x52, 0x59, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x02, 0x52, 0x59, 0x12, 0x0e, 0x0a, 0x02, 0x52, 0x5a, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x02, 0x52, 0x5a, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x49, 0x58, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x52, 0x49, 0x58, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x49, 0x59,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x52, 0x49, 0x59, 0x12, 0x10, 0x0a, 0x03, 0x52,
	0x49, 0x5a, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x52, 0x49, 0x5a, 0x12, 0x0e, 0x0a,
	0x02, 0x41, 0x58, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x02, 0x41, 0x58, 0x12, 0x0e, 0x0a,
	0x02, 0x41, 0x59, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x02, 0x41, 0x59, 0x12, 0x0e, 0x0a,
	0x02, 0x41, 0x5a, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x02, 0x41, 0x5a, 0x22, 0x7b, 0x0a,
	0x09, 0x54, 0x43, 0x50, 0x5f, 0x54, 0x62, 0x4f, 0x62, 0x6a, 0x12, 0x14, 0x0a, 0x05, 0x4f, 0x62,
	0x6a, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4f, 0x62, 0x6a, 0x49, 0x64,
	0x12, 0x0c, 0x0a, 0x01, 0x58, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x58, 0x12, 0x0c,
	0x0a, 0x01, 0x59, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x59, 0x12, 0x0c, 0x0a, 0x01,
	0x5a, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x5a, 0x12, 0x0e, 0x0a, 0x02, 0x52, 0x58,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x02, 0x52, 0x58, 0x12, 0x0e, 0x0a, 0x02, 0x52, 0x59,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x02, 0x52, 0x59, 0x12, 0x0e, 0x0a, 0x02, 0x52, 0x5a,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x02, 0x52, 0x5a, 0x22, 0x40, 0x0a, 0x10, 0x54, 0x63,
	0x70, 0x5f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x4f, 0x62, 0x6a, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4f,
	0x62, 0x6a, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x72, 0x0a, 0x08,
	0x54, 0x63, 0x70, 0x5f, 0x53, 0x74, 0x65, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x65, 0x70,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x65, 0x70, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x53, 0x74, 0x65, 0x70, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x53, 0x74, 0x65, 0x70, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x53, 0x74, 0x65, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x53, 0x74, 0x65, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x55, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x55, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x21, 0x0a, 0x09, 0x54, 0x63, 0x70, 0x5f, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x22, 0x38, 0x0a, 0x0a, 0x54, 0x63, 0x70, 0x5f, 0x53, 0x68, 0x69, 0x78, 0x75,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x22, 0x27, 0x0a,
	0x09, 0x54, 0x63, 0x70, 0x5f, 0x55, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x46, 0x0a, 0x0c, 0x54, 0x63, 0x70, 0x5f, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0x88,
	0x01, 0x0a, 0x10, 0x54, 0x63, 0x70, 0x5f, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x51, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x51, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x74, 0x65,
	0x70, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x74, 0x65,
	0x70, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x65, 0x70, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x53, 0x74, 0x65, 0x70, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x55, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x55, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xa8, 0x01, 0x0a, 0x0e, 0x54, 0x63,
	0x70, 0x5f, 0x57, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x57, 0x6f, 0x72, 0x6b, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x57, 0x6f,
	0x72, 0x6b, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x57, 0x6f, 0x72, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x57, 0x6f, 0x72, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x72, 0x74,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x50, 0x61,
	0x72, 0x74, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x61, 0x78, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x4d, 0x61, 0x78, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x22, 0x44, 0x0a, 0x12, 0x54, 0x63, 0x70, 0x5f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x10, 0x54, 0x63,
	0x70, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x69, 0x0a, 0x0d,
	0x54, 0x63, 0x70, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4a, 0x6b, 0x12, 0x20, 0x0a,
	0x0b, 0x4f, 0x6c, 0x64, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x4f, 0x6c, 0x64, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0x40, 0x0a, 0x0e, 0x54, 0x63, 0x70, 0x5f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4a, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0x91, 0x01, 0x0a, 0x11, 0x54, 0x63,
	0x70, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x55, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x55, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x4d, 0x61, 0x69,
	0x6e, 0x43, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x4d, 0x61, 0x69, 0x6e, 0x43, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x22, 0x36, 0x0a,
	0x06, 0x54, 0x63, 0x70, 0x5f, 0x54, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x42, 0x0b, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0xaa, 0x02, 0x02,
	0x50, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_msg_proto_rawDescOnce sync.Once
	file_pb_msg_proto_rawDescData = file_pb_msg_proto_rawDesc
)

func file_pb_msg_proto_rawDescGZIP() []byte {
	file_pb_msg_proto_rawDescOnce.Do(func() {
		file_pb_msg_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_msg_proto_rawDescData)
	})
	return file_pb_msg_proto_rawDescData
}

var file_pb_msg_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_pb_msg_proto_goTypes = []interface{}{
	(*SyncPID)(nil),                // 0: pb.SyncPID
	(*Tcp_Info)(nil),               // 1: pb.Tcp_Info
	(*Tcp_Login)(nil),              // 2: pb.Tcp_Login
	(*Tcp_Lose)(nil),               // 3: pb.Tcp_Lose
	(*Tcp_Bind)(nil),               // 4: pb.Tcp_Bind
	(*Tcp_Version)(nil),            // 5: pb.Tcp_Version
	(*Tcp_StudentStatus)(nil),      // 6: pb.Tcp_StudentStatus
	(*Response_StudentStatus)(nil), // 7: pb.Response_StudentStatus
	(*Tcp_UserInfo)(nil),           // 8: pb.Tcp_UserInfo
	(*Tcp_Gz)(nil),                 // 9: pb.Tcp_Gz
	(*Tcp_Gz_Response)(nil),        // 10: pb.Tcp_Gz_Response
	(*Tcp_CourseInfo)(nil),         // 11: pb.Tcp_CourseInfo
	(*Tcp_CoursePlay)(nil),         // 12: pb.Tcp_CoursePlay
	(*Tcp_Members)(nil),            // 13: pb.Tcp_Members
	(*Tcp_VideoStep)(nil),          // 14: pb.Tcp_VideoStep
	(*TCP_RegisterObj)(nil),        // 15: pb.TCP_RegisterObj
	(*TCP_Grab_Call)(nil),          // 16: pb.TCP_Grab_Call
	(*Tcp_Object)(nil),             // 17: pb.Tcp_Object
	(*TCP_DetachObj)(nil),          // 18: pb.TCP_DetachObj
	(*TCP_TbObj)(nil),              // 19: pb.TCP_TbObj
	(*Tcp_ObjectStatus)(nil),       // 20: pb.Tcp_ObjectStatus
	(*Tcp_Step)(nil),               // 21: pb.Tcp_Step
	(*Tcp_Leave)(nil),              // 22: pb.Tcp_Leave
	(*Tcp_Shixun)(nil),             // 23: pb.Tcp_Shixun
	(*Tcp_UInfo)(nil),              // 24: pb.Tcp_UInfo
	(*Tcp_Progress)(nil),           // 25: pb.Tcp_Progress
	(*Tcp_QuestionInfo)(nil),       // 26: pb.Tcp_QuestionInfo
	(*Tcp_WorkRecord)(nil),         // 27: pb.Tcp_WorkRecord
	(*Tcp_ResponseRecord)(nil),     // 28: pb.Tcp_ResponseRecord
	(*Tcp_RequestScene)(nil),       // 29: pb.Tcp_RequestScene
	(*Tcp_RequestJk)(nil),          // 30: pb.Tcp_RequestJk
	(*Tcp_ResponseJk)(nil),         // 31: pb.Tcp_ResponseJk
	(*Tcp_ResponseScene)(nil),      // 32: pb.Tcp_ResponseScene
	(*Tcp_To)(nil),                 // 33: pb.Tcp_To
}
var file_pb_msg_proto_depIdxs = []int32{
	9, // 0: pb.Tcp_Gz_Response.GzStatus:type_name -> pb.Tcp_Gz
	1, // 1: pb.Tcp_Gz_Response.Info:type_name -> pb.Tcp_Info
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_pb_msg_proto_init() }
func file_pb_msg_proto_init() {
	if File_pb_msg_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_msg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncPID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tcp_Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tcp_Login); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tcp_Lose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tcp_Bind); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tcp_Version); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tcp_StudentStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response_StudentStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tcp_UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tcp_Gz); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tcp_Gz_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tcp_CourseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tcp_CoursePlay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tcp_Members); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tcp_VideoStep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TCP_RegisterObj); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TCP_Grab_Call); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tcp_Object); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TCP_DetachObj); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TCP_TbObj); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tcp_ObjectStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tcp_Step); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tcp_Leave); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tcp_Shixun); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tcp_UInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tcp_Progress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tcp_QuestionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tcp_WorkRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tcp_ResponseRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tcp_RequestScene); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tcp_RequestJk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tcp_ResponseJk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tcp_ResponseScene); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tcp_To); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_msg_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pb_msg_proto_goTypes,
		DependencyIndexes: file_pb_msg_proto_depIdxs,
		MessageInfos:      file_pb_msg_proto_msgTypes,
	}.Build()
	File_pb_msg_proto = out.File
	file_pb_msg_proto_rawDesc = nil
	file_pb_msg_proto_goTypes = nil
	file_pb_msg_proto_depIdxs = nil
}
